# generated by datamodel-codegen:
#   filename:  spec.yaml

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Any, Dict, List, Literal, Optional, Union
from uuid import UUID

from pydantic import AnyUrl, BaseModel, Extra, Field, StrictFloat, StrictInt, StrictStr, constr


class CoordinateSystemEntry(BaseModel):
    class Config:
        extra = Extra.allow

    title: StrictStr = Field(..., title="Title")
    well_known_id: StrictStr = Field(..., title="Well Known Id")


class Label(BaseModel):
    class Config:
        extra = Extra.allow

    __root__: constr(min_length=1, max_length=100, strict=True)


class GeometryTypeEnum(BaseModel):
    class Config:
        extra = Extra.allow

    __root__: Literal["Polygon"] = Field("Polygon", title="GeometryTypeEnum")


class PaginationLinks(BaseModel):
    class Config:
        extra = Extra.allow

    count: StrictInt = Field(..., title="Count")
    first: AnyUrl = Field(..., title="First")
    last: AnyUrl = Field(..., title="Last")
    next: Optional[AnyUrl] = Field(None, title="Next")
    previous: Optional[AnyUrl] = Field(None, title="Previous")
    total: StrictInt = Field(..., title="Total")


class RoleEnum(Enum):
    owner = "owner"
    editor = "editor"
    viewer = "viewer"


class User(BaseModel):
    class Config:
        extra = Extra.allow

    email: Optional[StrictStr] = Field(None, title="Email")
    full_name: Optional[StrictStr] = Field(None, title="Full Name")
    role: RoleEnum
    user_id: UUID = Field(..., title="User Id")


class UserModel(BaseModel):
    class Config:
        extra = Extra.allow

    email: Optional[StrictStr] = Field(None, title="Email")
    id: UUID = Field(..., title="Id")
    name: Optional[StrictStr] = Field(None, title="Name")


class UserRole(BaseModel):
    class Config:
        extra = Extra.allow

    role: RoleEnum
    user_id: UUID = Field(..., title="User Id")


class UserRoleAssignmentRequest(BaseModel):
    class Config:
        extra = Extra.allow

    role: RoleEnum
    user_id: UUID = Field(..., title="User Id")
    workspace_id: UUID = Field(..., title="Workspace Id")


class BoundingBox(BaseModel):
    class Config:
        extra = Extra.allow

    coordinates: List[List[List[Union[StrictFloat, StrictInt]]]] = Field(..., title="Coordinates")
    type: GeometryTypeEnum


class BulkUserRoleAssignmentsRequest(BaseModel):
    class Config:
        extra = Extra.allow

    role_assignments: List[UserRoleAssignmentRequest] = Field(..., max_items=100, title="Role Assignments")


class CoordinateSystemCategory(BaseModel):
    class Config:
        extra = Extra.allow

    items: List[Union[CoordinateSystemCategory, CoordinateSystemEntry]] = Field(..., title="Items")
    title: StrictStr = Field(..., title="Title")


class CreateWorkspaceRequest(BaseModel):
    class Config:
        extra = Extra.allow

    bounding_box: Optional[BoundingBox] = None
    default_coordinate_system: Optional[StrictStr] = Field("", title="Default Coordinate System")
    description: Optional[StrictStr] = Field("", title="Description")
    labels: Optional[List[Label]] = Field(None, max_items=20, title="Labels")
    """
    A list of labels
    """
    name: constr(min_length=1, max_length=60, strict=True) = Field(..., title="Name")
    """
    The name of the workspace, unique within an organization and hub
    """


class ListCoordinateSystemsResponse(BaseModel):
    class Config:
        extra = Extra.allow

    links: Dict[str, Any] = Field(..., title="Links")
    results: List[CoordinateSystemCategory] = Field(..., title="Results")


class ListUserRoleResponse(BaseModel):
    class Config:
        extra = Extra.allow

    links: Dict[str, Any] = Field(..., title="Links")
    results: List[User] = Field(..., title="Results")


class UpdateWorkspaceRequest(BaseModel):
    class Config:
        extra = Extra.allow

    bounding_box: Optional[BoundingBox] = None
    default_coordinate_system: Optional[StrictStr] = Field(None, title="Default Coordinate System")
    description: Optional[StrictStr] = Field(None, title="Description")
    labels: Optional[List[Label]] = Field(None, max_items=20, title="Labels")
    """
    A list of labels
    """
    name: Optional[constr(min_length=1, max_length=60, strict=True)] = Field(None, title="Name")


class UserWorkspaceResponse(BaseModel):
    class Config:
        extra = Extra.allow

    bounding_box: Optional[BoundingBox] = None
    created_at: datetime = Field(..., title="Created At")
    created_by: UserModel
    default_coordinate_system: StrictStr = Field(..., title="Default Coordinate System")
    description: StrictStr = Field(..., title="Description")
    id: UUID = Field(..., title="Id")
    labels: List[StrictStr] = Field(..., title="Labels")
    name: constr(min_length=1, max_length=60, strict=True) = Field(..., title="Name")
    """
    The name of the workspace, unique within an organization and hub
    """
    self_link: AnyUrl = Field(..., title="Self Link")
    updated_at: datetime = Field(..., title="Updated At")
    updated_by: UserModel
    user_role: RoleEnum


class WorkspaceAdminResponse(BaseModel):
    class Config:
        extra = Extra.allow

    bounding_box: Optional[BoundingBox] = None
    created_at: datetime = Field(..., title="Created At")
    created_by: UserModel
    current_user_role: Optional[RoleEnum] = None
    default_coordinate_system: StrictStr = Field(..., title="Default Coordinate System")
    description: StrictStr = Field(..., title="Description")
    id: UUID = Field(..., title="Id")
    labels: List[StrictStr] = Field(..., title="Labels")
    name: constr(min_length=1, max_length=60, strict=True) = Field(..., title="Name")
    """
    The name of the workspace, unique within an organization and hub
    """
    self_link: AnyUrl = Field(..., title="Self Link")
    updated_at: datetime = Field(..., title="Updated At")
    updated_by: UserModel


class WorkspaceNonAdminResponse(BaseModel):
    class Config:
        extra = Extra.allow

    bounding_box: Optional[BoundingBox] = None
    created_at: datetime = Field(..., title="Created At")
    created_by: UserModel
    current_user_role: RoleEnum
    default_coordinate_system: StrictStr = Field(..., title="Default Coordinate System")
    description: StrictStr = Field(..., title="Description")
    id: UUID = Field(..., title="Id")
    labels: List[StrictStr] = Field(..., title="Labels")
    name: constr(min_length=1, max_length=60, strict=True) = Field(..., title="Name")
    """
    The name of the workspace, unique within an organization and hub
    """
    self_link: AnyUrl = Field(..., title="Self Link")
    updated_at: datetime = Field(..., title="Updated At")
    updated_by: UserModel


class ListUserWorkspacesResponse(BaseModel):
    class Config:
        extra = Extra.allow

    links: PaginationLinks
    results: List[UserWorkspaceResponse] = Field(..., title="Results")


class ListWorkspacesResponse(BaseModel):
    class Config:
        extra = Extra.allow

    links: PaginationLinks
    results: Union[List[WorkspaceNonAdminResponse], List[WorkspaceAdminResponse]] = Field(..., title="Results")


CoordinateSystemCategory.update_forward_refs()
