# generated by datamodel-codegen:
#   filename:  spec.yaml

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Any, Literal
from uuid import UUID

from pydantic import AnyUrl, BaseModel, ConfigDict, Field, RootModel, StrictFloat, StrictInt, StrictStr, constr


class CoordinateSystemEntry(BaseModel):
    model_config = ConfigDict(
        extra="allow",
    )
    title: StrictStr = Field(..., title="Title")
    well_known_id: StrictStr = Field(..., title="Well Known Id")


class Label(RootModel[constr(min_length=1, max_length=100, strict=True)]):
    root: constr(min_length=1, max_length=100, strict=True)


class GeometryTypeEnum(RootModel[Literal["Polygon"]]):
    root: Literal["Polygon"] = Field("Polygon", title="GeometryTypeEnum")


class PaginationLinks(BaseModel):
    model_config = ConfigDict(
        extra="allow",
    )
    count: StrictInt = Field(..., title="Count")
    first: AnyUrl = Field(..., title="First")
    last: AnyUrl = Field(..., title="Last")
    next: AnyUrl | None = Field(None, title="Next")
    previous: AnyUrl | None = Field(None, title="Previous")
    total: StrictInt = Field(..., title="Total")


class RoleEnum(Enum):
    owner = "owner"
    editor = "editor"
    viewer = "viewer"


class User(BaseModel):
    model_config = ConfigDict(
        extra="allow",
    )
    email: StrictStr | None = Field(None, title="Email")
    full_name: StrictStr | None = Field(None, title="Full Name")
    role: RoleEnum
    user_id: UUID = Field(..., title="User Id")


class UserModel(BaseModel):
    model_config = ConfigDict(
        extra="allow",
    )
    email: StrictStr | None = Field(None, title="Email")
    id: UUID = Field(..., title="Id")
    name: StrictStr | None = Field(None, title="Name")


class UserRole(BaseModel):
    model_config = ConfigDict(
        extra="allow",
    )
    role: RoleEnum
    user_id: UUID = Field(..., title="User Id")


class UserRoleAssignmentRequest(BaseModel):
    model_config = ConfigDict(
        extra="allow",
    )
    role: RoleEnum
    user_id: UUID = Field(..., title="User Id")
    workspace_id: UUID = Field(..., title="Workspace Id")


class BoundingBox(BaseModel):
    model_config = ConfigDict(
        extra="allow",
    )
    coordinates: list[list[list[StrictFloat | StrictInt]]] = Field(..., title="Coordinates")
    type: GeometryTypeEnum


class BulkUserRoleAssignmentsRequest(BaseModel):
    model_config = ConfigDict(
        extra="allow",
    )
    role_assignments: list[UserRoleAssignmentRequest] = Field(..., max_length=100, title="Role Assignments")


class CoordinateSystemCategory(BaseModel):
    model_config = ConfigDict(
        extra="allow",
    )
    items: list[CoordinateSystemCategory | CoordinateSystemEntry] = Field(..., title="Items")
    title: StrictStr = Field(..., title="Title")


class CreateWorkspaceRequest(BaseModel):
    model_config = ConfigDict(
        extra="allow",
    )
    bounding_box: BoundingBox | None = None
    default_coordinate_system: StrictStr | None = Field("", title="Default Coordinate System")
    description: StrictStr | None = Field("", title="Description")
    labels: list[Label] | None = Field(None, max_length=20, title="Labels")
    """
    A list of labels
    """
    name: constr(min_length=1, max_length=60, strict=True) = Field(..., title="Name")
    """
    The name of the workspace, unique within an organization and hub
    """


class ListCoordinateSystemsResponse(BaseModel):
    model_config = ConfigDict(
        extra="allow",
    )
    links: dict[str, Any] = Field(..., title="Links")
    results: list[CoordinateSystemCategory] = Field(..., title="Results")


class ListUserRoleResponse(BaseModel):
    model_config = ConfigDict(
        extra="allow",
    )
    links: dict[str, Any] = Field(..., title="Links")
    results: list[User] = Field(..., title="Results")


class UpdateWorkspaceRequest(BaseModel):
    model_config = ConfigDict(
        extra="allow",
    )
    bounding_box: BoundingBox | None = None
    default_coordinate_system: StrictStr | None = Field(None, title="Default Coordinate System")
    description: StrictStr | None = Field(None, title="Description")
    labels: list[Label] | None = Field(None, max_length=20, title="Labels")
    """
    A list of labels
    """
    name: constr(min_length=1, max_length=60, strict=True) | None = Field(None, title="Name")


class UserWorkspaceResponse(BaseModel):
    model_config = ConfigDict(
        extra="allow",
    )
    bounding_box: BoundingBox | None = None
    created_at: datetime = Field(..., title="Created At")
    created_by: UserModel
    default_coordinate_system: StrictStr = Field(..., title="Default Coordinate System")
    description: StrictStr = Field(..., title="Description")
    id: UUID = Field(..., title="Id")
    labels: list[StrictStr] = Field(..., title="Labels")
    name: constr(min_length=1, max_length=60, strict=True) = Field(..., title="Name")
    """
    The name of the workspace, unique within an organization and hub
    """
    self_link: AnyUrl = Field(..., title="Self Link")
    updated_at: datetime = Field(..., title="Updated At")
    updated_by: UserModel
    user_role: RoleEnum


class WorkspaceAdminResponse(BaseModel):
    model_config = ConfigDict(
        extra="allow",
    )
    bounding_box: BoundingBox | None = None
    created_at: datetime = Field(..., title="Created At")
    created_by: UserModel
    current_user_role: RoleEnum | None = None
    default_coordinate_system: StrictStr = Field(..., title="Default Coordinate System")
    description: StrictStr = Field(..., title="Description")
    id: UUID = Field(..., title="Id")
    labels: list[StrictStr] = Field(..., title="Labels")
    name: constr(min_length=1, max_length=60, strict=True) = Field(..., title="Name")
    """
    The name of the workspace, unique within an organization and hub
    """
    self_link: AnyUrl = Field(..., title="Self Link")
    updated_at: datetime = Field(..., title="Updated At")
    updated_by: UserModel


class WorkspaceNonAdminResponse(BaseModel):
    model_config = ConfigDict(
        extra="allow",
    )
    bounding_box: BoundingBox | None = None
    created_at: datetime = Field(..., title="Created At")
    created_by: UserModel
    current_user_role: RoleEnum
    default_coordinate_system: StrictStr = Field(..., title="Default Coordinate System")
    description: StrictStr = Field(..., title="Description")
    id: UUID = Field(..., title="Id")
    labels: list[StrictStr] = Field(..., title="Labels")
    name: constr(min_length=1, max_length=60, strict=True) = Field(..., title="Name")
    """
    The name of the workspace, unique within an organization and hub
    """
    self_link: AnyUrl = Field(..., title="Self Link")
    updated_at: datetime = Field(..., title="Updated At")
    updated_by: UserModel


class ListUserWorkspacesResponse(BaseModel):
    model_config = ConfigDict(
        extra="allow",
    )
    links: PaginationLinks
    results: list[UserWorkspaceResponse] = Field(..., title="Results")


class ListWorkspacesResponse(BaseModel):
    model_config = ConfigDict(
        extra="allow",
    )
    links: PaginationLinks
    results: list[WorkspaceNonAdminResponse] | list[WorkspaceAdminResponse] = Field(..., title="Results")


CoordinateSystemCategory.model_rebuild()
