#  Copyright Â© 2025 Bentley Systems, Incorporated
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#      http://www.apache.org/licenses/LICENSE-2.0
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

# generated by datamodel-codegen:
#   filename:  spec.yaml

from __future__ import annotations

from enum import Enum
from typing import Literal
from uuid import UUID

from pydantic import (
    AwareDatetime,
    Field,
    RootModel,
    StrictBool,
    StrictFloat,
    StrictInt,
    StrictStr,
)

from .._model_config import CustomBaseModel


class CoordinateItem(RootModel[list[StrictFloat]]):
    root: list[StrictFloat] = Field(..., max_length=2, min_length=2, title="GeoJSON Point")
    """
    A WGS84 coordinate pair [longitude, latitude]. The longitude must come before the latitude, in order to be considered a valid GeoJSON Point
    """


class Coordinate(RootModel[list[CoordinateItem]]):
    root: list[CoordinateItem] = Field(..., max_length=5, min_length=5, title="GeoJSON LinearRing")
    """
    A list of GeoJSON points defining a closed linear ring. In order for the ring to be closed, the last point must be the same as the first point. Only a rectangle is supported, so the ring must be defined by 5 points.
    """


class DataDownloadUrl(CustomBaseModel):
    download_url: StrictStr | None = Field(None, title="Download Url")
    id: StrictStr = Field(..., title="Id")


class DataUploadRequestBody(CustomBaseModel):
    name: StrictStr = Field(..., title="Name")
    """
    SHA256 or UUID "name" for the data file. SHA256 is preferred as it allows other clients to deduplicate data.
    """


class DataUploadResponseBody(CustomBaseModel):
    exists: StrictBool = Field(..., title="Exists")
    id: UUID = Field(..., title="Id")
    """
    Server-generated unique identifier for the data
    """
    name: StrictStr = Field(..., title="Name")
    """
    client-provided name for the data (SHA256 or UUID)
    """
    upload_url: StrictStr | None = Field(None, title="Upload Url")


class DataUploadUrl(CustomBaseModel):
    exists: StrictBool | None = Field(None, title="Exists")
    id: StrictStr = Field(..., title="Id")
    upload_url: StrictStr | None = Field(None, title="Upload Url")


class GeoJSONType(RootModel[Literal["Polygon"]]):
    root: Literal["Polygon"] = Field("Polygon", title="GeoJSONType")


class GeoscienceObject(CustomBaseModel):
    """
    The geoscience object with the additional required schema properties.

    This object is largely defined by the schemas in the evo-schemas repository.
    There are some default, required values listed here explicitly.
    """

    schema_: StrictStr = Field(..., alias="schema", title="Schema")
    """
    The geoscience object schema.
    """
    uuid: UUID | None = Field(None, title="Uuid")
    """
    Unique object UUID.
    """


class LatestObjectVersionIdResponse(CustomBaseModel):
    object_id: StrictStr = Field(..., title="Object Id")
    version_id: StrictStr | None = Field(None, title="Version Id")


class ListObjectsResponseLinks(CustomBaseModel):
    next: StrictStr | None = Field(None, title="Next")
    prev: StrictStr | None = Field(None, title="Prev")


class ListedObjectLinks(CustomBaseModel):
    download: StrictStr = Field(..., title="Download")


class NamedDataDownloadUrl(CustomBaseModel):
    download_url: StrictStr | None = Field(None, title="Download Url")
    id: UUID = Field(..., title="Id")
    name: StrictStr = Field(..., title="Name")


class ObjectResponseLinks(CustomBaseModel):
    data: list[DataDownloadUrl | NamedDataDownloadUrl] = Field(..., title="Data")
    download: StrictStr = Field(..., title="Download")


class ObjectVersionResponseLinks(CustomBaseModel):
    download: StrictStr = Field(..., title="Download")


class RoleEnum(Enum):
    owner = "owner"
    editor = "editor"
    viewer = "viewer"


class UpdateGeoscienceObject(CustomBaseModel):
    """
    The geoscience object with the additional required schema properties.

    The uuid field must be set when updating a geoscience object.
    This object is largely defined by the schemas in the evo-schemas repository.
    There are some default, required values listed here explicitly.
    """

    schema_: StrictStr = Field(..., alias="schema", title="Schema")
    """
    The geoscience object schema.
    """
    uuid: UUID = Field(..., title="Uuid")
    """
    Unique object UUID.
    """


class User(CustomBaseModel):
    """
    User details.
    """

    email: StrictStr | None = Field(None, title="Email")
    id: UUID = Field(..., title="Id")
    name: StrictStr | None = Field(None, title="Name")


class BoundingBox(CustomBaseModel):
    """
    The bounding box for a geoscience object, represented by a GeoJSON polygon.
    """

    coordinates: list[Coordinate] = Field(..., max_length=1, min_length=1, title="GeoJSON Polygon Coordinates")
    """
    A list containing one exterior ring of a GeoJSON polygon
    """
    type: GeoJSONType = Field(default_factory=lambda: GeoJSONType.model_validate("Polygon"))


class GeoscienceObjectVersion(CustomBaseModel):
    """
    Geoscience object version.
    """

    created_at: AwareDatetime = Field(..., title="Created At")
    created_by: User | None = None
    etag: StrictStr = Field(..., title="Etag")
    links: ObjectVersionResponseLinks
    version_id: StrictStr = Field(..., title="Version Id")


class GetObjectResponse(CustomBaseModel):
    created_at: AwareDatetime = Field(..., title="Created At")
    created_by: User | None = None
    etag: StrictStr = Field(..., title="Etag")
    geojson_bounding_box: BoundingBox | None = None
    links: ObjectResponseLinks
    modified_at: AwareDatetime = Field(..., title="Modified At")
    modified_by: User | None = None
    object: GeoscienceObject
    object_id: UUID = Field(..., title="Object Id")
    object_path: StrictStr | None = Field(None, title="Object Path")
    version_id: StrictStr = Field(..., title="Version Id")
    versions: list[GeoscienceObjectVersion] | None = Field(None, title="Versions")


class ListedObject(CustomBaseModel):
    created_at: AwareDatetime = Field(..., title="Created At")
    created_by: User | None = None
    etag: StrictStr = Field(..., title="Etag")
    geojson_bounding_box: BoundingBox | None = None
    links: ListedObjectLinks
    modified_at: AwareDatetime = Field(..., title="Modified At")
    modified_by: User | None = None
    name: StrictStr = Field(..., title="Name")
    object_id: UUID = Field(..., title="Object Id")
    path: StrictStr = Field(..., title="Path")
    schema_: StrictStr = Field(..., alias="schema", title="Schema")
    """
    The geoscience object schema.
    """
    version_id: StrictStr = Field(..., title="Version Id")


class OrgListedObject(CustomBaseModel):
    created_at: AwareDatetime = Field(..., title="Created At")
    created_by: User | None = None
    geojson_bounding_box: BoundingBox | None = None
    modified_at: AwareDatetime = Field(..., title="Modified At")
    modified_by: User | None = None
    name: StrictStr = Field(..., title="Name")
    object_id: UUID = Field(..., title="Object Id")
    schema_: StrictStr = Field(..., alias="schema", title="Schema")
    workspace_access: RoleEnum | None = None
    workspace_id: UUID = Field(..., title="Workspace Id")
    workspace_name: StrictStr | None = Field(None, title="Workspace Name")


class PostObjectResponse(CustomBaseModel):
    created_at: AwareDatetime = Field(..., title="Created At")
    created_by: User | None = None
    etag: StrictStr = Field(..., title="Etag")
    geojson_bounding_box: BoundingBox | None = None
    links: ObjectResponseLinks
    modified_at: AwareDatetime = Field(..., title="Modified At")
    modified_by: User | None = None
    object: GeoscienceObject
    object_id: UUID | None = Field(None, title="Object Id")
    object_path: StrictStr | None = Field(None, title="Object Path")
    version_id: StrictStr = Field(..., title="Version Id")


class ListObjectsResponse(CustomBaseModel):
    count: StrictInt = Field(0, title="Count")
    limit: StrictInt = Field(0, title="Limit")
    links: ListObjectsResponseLinks
    objects: list[ListedObject] = Field(..., title="Objects")
    offset: StrictInt = Field(0, title="Offset")
    total: StrictInt = Field(0, title="Total")


class ListOrgObjectsResponse(CustomBaseModel):
    count: StrictInt = Field(0, title="Count")
    limit: StrictInt = Field(0, title="Limit")
    links: ListObjectsResponseLinks
    objects: list[OrgListedObject] = Field(..., title="Objects")
    offset: StrictInt = Field(0, title="Offset")
    total: StrictInt = Field(0, title="Total")
