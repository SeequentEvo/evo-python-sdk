#  Copyright Â© 2025 Bentley Systems, Incorporated
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#      http://www.apache.org/licenses/LICENSE-2.0
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

# generated by datamodel-codegen:
#   filename:  spec.yaml

from __future__ import annotations

from enum import Enum
from typing import Annotated, Any
from uuid import UUID

from pydantic import (
    AnyUrl,
    AwareDatetime,
    Field,
    RootModel,
    StrictBool,
    StrictFloat,
    StrictInt,
    StrictStr,
)

from .._model_config import CustomBaseModel


class AttributeAssociationData(CustomBaseModel):
    attribute_id: Annotated[StrictStr, Field(title="Attribute Id")]
    colormap_id: Annotated[UUID, Field(title="Colormap Id")]


class AttributeAssociationsData(CustomBaseModel):
    associations: Annotated[
        list[AttributeAssociationData],
        Field(max_length=128, min_length=1, title="Associations"),
    ]


class AttributeColormapAssociation(CustomBaseModel):
    attribute_id: Annotated[StrictStr, Field(title="Attribute ID")]
    colormap_id: Annotated[UUID, Field(title="Colormap ID")]
    colormap_uri: Annotated[AnyUrl, Field(title="Colormap URI")]
    created_at: Annotated[AwareDatetime, Field(title="Created at")]
    created_by: Annotated[UUID, Field(title="Created by")]
    id: Annotated[UUID, Field(title="ID")]
    modified_at: Annotated[AwareDatetime, Field(title="Modified at")]
    modified_by: Annotated[UUID, Field(title="Modified by")]
    self_link: Annotated[AnyUrl, Field(title="Self link")]
    workspace_id: Annotated[UUID, Field(title="Workspace ID")]


class AttributeColormapAssociationList(CustomBaseModel):
    associations: Annotated[list[AttributeColormapAssociation], Field(title="Associations")]


class ColorItem(RootModel[StrictInt]):
    root: StrictInt


class Color(RootModel[list[ColorItem]]):
    root: Annotated[list[ColorItem], Field(max_length=3, min_length=3)]


class CategoryColormapData(CustomBaseModel):
    colors: Annotated[list[Color], Field(max_length=16384, min_length=1, title="Colors")]
    """
    An ordered list of RGB colors, containing between 1 and 16384 colors. Each color is represented by three integer values (for Red, Green, and Blue) ranging from 0 to 255.
    """
    dtype: Annotated[StrictStr, Field(title="Dtype")] = "category"
    map: Annotated[list[StrictStr], Field(title="Map")]
    name: Annotated[StrictStr, Field(title="Name")]


class Color1Item(RootModel[StrictInt]):
    root: StrictInt


class Color1(RootModel[list[Color1Item]]):
    root: Annotated[list[Color1Item], Field(max_length=3, min_length=3)]


class ColormapTypeEnum(Enum):
    continuous = "continuous"
    category = "category"
    discrete = "discrete"


class Color2Item(RootModel[StrictInt]):
    root: StrictInt


class Color2(RootModel[list[Color2Item]]):
    root: Annotated[list[Color2Item], Field(max_length=3, min_length=3)]


class ContinuousColormapData(CustomBaseModel):
    attribute_controls: Annotated[list[StrictFloat], Field(min_length=2, title="Attribute Controls")]
    colors: Annotated[list[Color2], Field(max_length=1024, min_length=2, title="Colors")]
    """
    An ordered list of RGB colors, containing between 2 and 1024 colors. Each color is represented by three integer values (for Red, Green, and Blue) ranging from 0 to 255.
    """
    dtype: Annotated[StrictStr, Field(title="Dtype")] = "continuous"
    gradient_controls: Annotated[list[StrictFloat], Field(min_length=2, title="Gradient Controls")]
    name: Annotated[StrictStr, Field(title="Name")]


class Color3Item(RootModel[StrictInt]):
    root: StrictInt


class Color3(RootModel[list[Color3Item]]):
    root: Annotated[list[Color3Item], Field(max_length=3, min_length=3)]


class ContinuousColormapResponse(CustomBaseModel):
    attribute_controls: Annotated[list[StrictFloat], Field(min_length=1, title="Attribute controls")]
    """
    List of ordered attribute values for gradient curve
    """
    colors: Annotated[list[Color3], Field(max_length=1024, min_length=2, title="Colors")]
    """
    An ordered list of RGB colors, containing between 2 and 1024 colors. Each color is represented by three integer values (for Red, Green, and Blue) ranging from 0 to 255.
    """
    created_at: Annotated[AwareDatetime, Field(title="Created at")]
    created_by: Annotated[UUID, Field(title="Created by")]
    gradient_controls: Annotated[list[StrictFloat], Field(min_length=1, title="Gradient controls")]
    """
    List of gradient positions for gradient curve, floats between 0 and 1
    """
    id: Annotated[UUID, Field(title="ID")]
    modified_at: Annotated[AwareDatetime, Field(title="Modified at")]
    modified_by: Annotated[UUID, Field(title="Modified by")]
    name: Annotated[StrictStr, Field(title="Name")]
    schema_: Annotated[ColormapTypeEnum, Field(alias="schema")]
    self_link: Annotated[AnyUrl, Field(title="Self link")]


class Color4Item(RootModel[StrictInt]):
    root: StrictInt


class Color4(RootModel[list[Color4Item]]):
    root: Annotated[list[Color4Item], Field(max_length=3, min_length=3)]


class DiscreteColormapData(CustomBaseModel):
    colors: Annotated[list[Color4], Field(max_length=1024, min_length=1, title="Colors")]
    """
    An ordered list of RGB colors, containing between 1 and 1024 colors. Each color is represented by three integer values (for Red, Green, and Blue) ranging from 0 to 255.
    """
    dtype: Annotated[StrictStr, Field(title="Dtype")] = "discrete"
    end_inclusive: Annotated[list[StrictBool], Field(title="End Inclusive")]
    end_points: Annotated[list[StrictFloat], Field(title="End Points")]
    name: Annotated[StrictStr, Field(title="Name")]


class Color5Item(RootModel[StrictInt]):
    root: StrictInt


class Color5(RootModel[list[Color5Item]]):
    root: Annotated[list[Color5Item], Field(max_length=3, min_length=3)]


class DiscreteColormapResponse(CustomBaseModel):
    colors: Annotated[list[Color5], Field(max_length=1024, min_length=1, title="Colors")]
    """
    An ordered list of RGB colors, containing between 1 and 1024 colors. Each color is represented by three integer values (for Red, Green, and Blue) ranging from 0 to 255.
    """
    created_at: Annotated[AwareDatetime, Field(title="Created at")]
    created_by: Annotated[UUID, Field(title="Created by")]
    end_inclusive: Annotated[list[StrictBool], Field(title="End inclusive")]
    """
    Boolean array indicating whether to include the endpoint in the bucket or not
    """
    end_points: Annotated[list[StrictFloat], Field(title="End points")]
    """
    List of colormap bucket endpoints, must be one fewer than the number of colors
    """
    id: Annotated[UUID, Field(title="ID")]
    modified_at: Annotated[AwareDatetime, Field(title="Modified at")]
    modified_by: Annotated[UUID, Field(title="Modified by")]
    name: Annotated[StrictStr, Field(title="Name")]
    schema_: Annotated[ColormapTypeEnum, Field(alias="schema")]
    self_link: Annotated[AnyUrl, Field(title="Self link")]


class WorkspaceMetadataResponse(CustomBaseModel):
    objects_metadata: Annotated[dict[str, Any], Field(title="Object metadata")]
    """
    Mapping of objects to their respective metadata
    """
    workspace_id: Annotated[UUID, Field(title="Workspace ID")]


class CategoryColormapResponse(CustomBaseModel):
    colors: Annotated[list[Color1], Field(max_length=16384, min_length=1, title="Colors")]
    """
    An ordered list of RGB colors, containing between 1 and 16384 colors. Each color is represented by three integer values (for Red, Green, and Blue) ranging from 0 to 255.
    """
    created_at: Annotated[AwareDatetime, Field(title="Created at")]
    created_by: Annotated[UUID, Field(title="Created by")]
    id: Annotated[UUID, Field(title="ID")]
    map: Annotated[list[StrictStr], Field(title="Map")]
    """
    String array mapping arbitrary strings to colors
    """
    modified_at: Annotated[AwareDatetime, Field(title="Modified at")]
    modified_by: Annotated[UUID, Field(title="Modified by")]
    name: Annotated[StrictStr, Field(title="Name")]
    schema_: Annotated[ColormapTypeEnum, Field(alias="schema")]
    self_link: Annotated[AnyUrl, Field(title="Self link")]


class ColormapResponseList(CustomBaseModel):
    colormaps: Annotated[
        list[CategoryColormapResponse | DiscreteColormapResponse | ContinuousColormapResponse],
        Field(title="Colormaps"),
    ]
