#  Copyright Â© 2025 Bentley Systems, Incorporated
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#      http://www.apache.org/licenses/LICENSE-2.0
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

# generated by datamodel-codegen:
#   filename:  spec.yaml

from __future__ import annotations

from enum import Enum
from typing import Any

from pydantic import AnyUrl, ConfigDict, StrictInt, StrictStr

from .._model_config import CustomBaseModel


class JobStatusCompleted(Enum):
    failed = "failed"
    canceled = "canceled"
    succeeded = "succeeded"


class JobStatusOngoing(Enum):
    requested = "requested"
    in_progress = "in progress"
    canceling = "canceling"


class JobStatusEnum(Enum):
    failed = "failed"
    canceled = "canceled"
    succeeded = "succeeded"
    requested = "requested"
    in_progress = "in progress"
    canceling = "canceling"


class CompletedJobLinks(CustomBaseModel):
    results: AnyUrl


class OngoingJobLinks(CustomBaseModel):
    cancel: AnyUrl


class ExecuteTaskRequest(CustomBaseModel):
    parameters: dict[str, StrictStr]


class OngoingJobResponse(CustomBaseModel):
    status: JobStatusOngoing


class Error(CustomBaseModel):
    model_config = ConfigDict(
        extra="allow",
    )
    status: StrictInt
    type: StrictStr
    title: StrictStr
    detail: StrictStr | None = None


class JobStatusResponse(CustomBaseModel):
    status: JobStatusEnum
    progress: StrictInt | None = None
    message: StrictStr | None = None
    error: Error | None = None
    links: CompletedJobLinks | OngoingJobLinks


class CompletedJobResponse(CustomBaseModel):
    status: JobStatusCompleted
    results: dict[str, Any] | None = None
    error: Error | None = None
